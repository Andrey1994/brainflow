Optionally see https://github.com/brainflow-dev/brainflow/issues/148

Instructions to add new boards to BrainFlow [from docs/BrainFlowDev.rst]

- [X] add new board Id to BoardIds enum in C code  src/utils/inc/brainflow_constants.h
- [X] and to the same enum in all bindings
    The new enum names are MUSE_1_BOARD (plain BT) and MUSE_2_BOARD (gatt BTLE).
    All new muses are MUSE_2, BTLE.

- [X] add new object creation to board controller C interface [src/board_controller/board_controller.cpp]

- [ ] inherit your board from Board class [src/board_controller/inc/board.h]
      and implement all pure virtual methods, store data in DataBuffer object, use
      synthetic board [src/board_controller/inc/synthetic_board.h] as a reference,
      try to reuse code from utils [src/utils] folder

    - [X] we'll probably want to add BLE functions to src/utils
            NativeBLE support has been drafted.  it has code for linux/mac/windows. https://github.com/kdewald/nativeble
            It looks like nativeble has only one user, the dev, so if there is a driver with more activity there's value to adding another.

    - [X] in Muse2 class, implement device selection (probably configuration, or skip this and just pick the first nearby device found)
    - [X] in Muse2 class, implement stream configuration (preset selection)

    - [X] in Muse2 class, implement session initialisation / releasing

    - [ ] test the bluetooth backend on at least the development platform and fix encountered bugs
            the nativeble project may have existing pull requests
            xloem also has a fork at https://github.com/xloem/nativeble
            it is also totally fine to pick or build a different backend
    
            NOTE: the normal way to do bluetooth is with the BLED112 dongle,
            so if you're making a general bluetooth backend interface, you'll want
            to port the BGLIB code to use it, too.

    - [ ] implement detection of bluetooth libraries in CMakeLists.txt
            this may mean adding a new error code to bluetooth for building without it.

    - [ ] in Muse2 class, implement stream starting / stopping
    - [ ] in Muse2 class, implement data forwarding

    - [ ] clean up any debugging output or work that's just for testing.  Make sure to use appropriate logging rather than iostreams.
    - [ ] remove the muse 1 board code, since it is unimplemented

- [ ] add information about your board to [src/board_controller/inc/brainflow_boards.h]

- [ ] add new files to BOARD_CONTROLLER_SRC variable in CmakeLists.txt, you may also need to add new directory to target_include_directories for BOARD_CONTROLLER_NAME variable

- [ ] optionally develop a simple emulator for the device [emulator/brainflow_emulator] and add tests to the github actions workflows.

